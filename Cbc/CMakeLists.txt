find_package(CoinUtils)
find_package(ZLIB)

set(_SRCS
	#src/CbcBranchBase.cpp
	src/Cbc_C_Interface.cpp
	src/CbcBranchAllDifferent.cpp
	src/CbcBranchCut.cpp
	src/CbcBranchDecision.cpp
	src/CbcBranchDefaultDecision.cpp
	src/CbcBranchDynamic.cpp
	src/CbcBranchingObject.cpp
	src/CbcBranchLotsize.cpp
	src/CbcBranchToFixLots.cpp
	src/CbcCbcParam.cpp
	src/CbcClique.cpp
	src/CbcCompareDefault.cpp
	src/CbcCompareDepth.cpp
	src/CbcCompareEstimate.cpp
	src/CbcCompareObjective.cpp
	src/CbcConsequence.cpp
	src/CbcCountRowCut.cpp
	src/CbcCutGenerator.cpp
	src/CbcCutModifier.cpp
	src/CbcCutSubsetModifier.cpp
	src/CbcDummyBranchingObject.cpp
	src/CbcEventHandler.cpp
	src/CbcFathom.cpp
	src/CbcFathomDynamicProgramming.cpp
	src/CbcFixVariable.cpp
	src/CbcFollowOn.cpp
	src/CbcFullNodeInfo.cpp
	src/CbcGenBaB.cpp
	src/CbcGenCbcParam.cpp
	src/CbcGenCbcParamUtils.cpp
	src/CbcGenCtlBlk.cpp
	src/CbcGeneral.cpp
	src/CbcGeneralDepth.cpp
	src/CbcGenMessages.cpp
	src/CbcGenOsiParam.cpp
	src/CbcGenOsiParamUtils.cpp
	src/CbcGenParam.cpp
	src/CbcGenParamUtils.cpp
	src/CbcGenSolution.cpp
	src/CbcGenSolvers.cpp
	src/CbcHeuristic.cpp
	src/CbcHeuristicDINS.cpp
	src/CbcHeuristicDiveCoefficient.cpp
	src/CbcHeuristicDive.cpp
	src/CbcHeuristicDiveFractional.cpp
	src/CbcHeuristicDiveGuided.cpp
	src/CbcHeuristicDiveLineSearch.cpp
	src/CbcHeuristicDivePseudoCost.cpp
	src/CbcHeuristicDiveVectorLength.cpp
	src/CbcHeuristicDW.cpp
	src/CbcHeuristicFPump.cpp
	src/CbcHeuristicGreedy.cpp
	src/CbcHeuristicLocal.cpp
	src/CbcHeuristicPivotAndFix.cpp
	src/CbcHeuristicRandRound.cpp
	src/CbcHeuristicRENS.cpp
	src/CbcHeuristicRINS.cpp
	src/CbcHeuristicVND.cpp
	src/CbcLinked.cpp
	src/CbcLinkedUtils.cpp
	src/CbcMessage.cpp
	src/CbcMipStartIO.cpp
	src/CbcModel.cpp
	src/CbcNode.cpp
	src/CbcNodeInfo.cpp
	src/CbcNWay.cpp
	src/CbcObject.cpp
	src/CbcObjectUpdateData.cpp
	src/CbcParam.cpp
	src/CbcPartialNodeInfo.cpp
	src/CbcSimpleInteger.cpp
	src/CbcSimpleIntegerDynamicPseudoCost.cpp
	src/CbcSimpleIntegerPseudoCost.cpp
	src/CbcSolverAnalyze.cpp
	src/CbcSolver.cpp
	src/CbcSolverExpandKnapsack.cpp
	src/CbcSolverHeuristics.cpp
	src/CbcSOS.cpp
	src/CbcStatistics.cpp
	src/CbcStrategy.cpp
	src/CbcSubProblem.cpp
	src/CbcThread.cpp
	src/CbcTree.cpp
	src/CbcTreeLocal.cpp
	src/unitTestClp.cpp)

set(_HDRS
	src/Cbc_C_Interface.h
	src/CbcBranchActual.hpp
	src/CbcBranchAllDifferent.hpp
	src/CbcBranchBase.hpp
	src/CbcBranchDynamic.hpp
	src/CbcBranchCut.hpp
	src/CbcBranchDecision.hpp
	src/CbcBranchDefaultDecision.hpp
	src/CbcBranchingObject.hpp
	src/CbcBranchLotsize.hpp
	src/CbcBranchToFixLots.hpp
	src/CbcCompareActual.hpp
	src/CbcCompareBase.hpp
	src/CbcCompareDefault.hpp
	src/CbcCompareDepth.hpp
	src/CbcCompareEstimate.hpp
	src/CbcCompareObjective.hpp
	src/CbcConsequence.hpp
	src/CbcClique.hpp
	src/CbcCompare.hpp
	src/CbcCountRowCut.hpp
	src/CbcCutGenerator.hpp
	src/CbcCutModifier.hpp
	src/CbcCutSubsetModifier.hpp
	src/CbcDummyBranchingObject.hpp
	src/CbcFathom.hpp
	src/CbcEventHandler.hpp
	src/CbcFathomDynamicProgramming.hpp
	src/CbcFeasibilityBase.hpp
	src/CbcFixVariable.hpp
	src/CbcFollowOn.hpp
	src/CbcFullNodeInfo.hpp
	src/CbcGeneral.hpp
	src/CbcGeneralDepth.hpp
	src/CbcHeuristic.hpp
	src/CbcHeuristicDINS.hpp
	src/CbcHeuristicDive.hpp
	src/CbcHeuristicDiveCoefficient.hpp
	src/CbcHeuristicDiveFractional.hpp
	src/CbcHeuristicDiveGuided.hpp
	src/CbcHeuristicDiveLineSearch.hpp
	src/CbcHeuristicDivePseudoCost.hpp
	src/CbcHeuristicDiveVectorLength.hpp
	src/CbcHeuristicDW.hpp
	src/CbcHeuristicFPump.hpp
	src/CbcHeuristicGreedy.hpp
	src/CbcHeuristicLocal.hpp
	src/CbcHeuristicPivotAndFix.hpp
	src/CbcHeuristicRandRound.hpp
	src/CbcHeuristicRENS.hpp
	src/CbcHeuristicRINS.hpp
	src/CbcHeuristicVND.hpp
	src/CbcMessage.hpp
	src/CbcModel.hpp
	src/CbcNode.hpp
	src/CbcNodeInfo.hpp
	src/CbcNWay.hpp
	src/CbcObject.hpp
	src/CbcObjectUpdateData.hpp
	src/CbcPartialNodeInfo.hpp
	src/CbcSimpleInteger.hpp
	src/CbcSimpleIntegerDynamicPseudoCost.hpp
	src/CbcSimpleIntegerPseudoCost.hpp
	src/CbcStrategy.hpp
	src/CbcSolver.hpp
	src/CbcMipStartIO.hpp
	src/CbcSOS.hpp
	src/CbcSubProblem.hpp
	src/CbcTree.hpp
	src/CbcLinked.hpp
	src/CbcTreeLocal.hpp
	src/ClpConstraintAmpl.hpp
	src/ClpAmplObjective.hpp)

add_library(Cbc ${_SRCS} ${_HDRS})
target_include_directories(Cbc PRIVATE src)
if(WIN32)
	target_compile_definitions(Cbc _CRT_SECURE_NO_WARNINGS _CRT_SECURE_NO_DEPRECATE)
endif ()
target_link_libraries(Cbc PRIVATE CoinUtils::CoinUtils ZLIB::ZLIB)
add_library(Cbc::Cbc ALIAS Cbc)
